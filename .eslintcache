[{"E:\\Polyclinic-react-app\\src\\models\\AppModel.js":"1","E:\\Polyclinic-react-app\\src\\components\\Schedule\\Schedule.jsx":"2","E:\\Polyclinic-react-app\\src\\components\\Note\\Note.jsx":"3","E:\\Polyclinic-react-app\\src\\store\\index.js":"4","E:\\Polyclinic-react-app\\src\\index.js":"5","E:\\Polyclinic-react-app\\src\\store\\actions.js":"6","E:\\Polyclinic-react-app\\src\\components\\Day\\Day.jsx":"7","E:\\Polyclinic-react-app\\src\\store\\reducer.js":"8","E:\\Polyclinic-react-app\\src\\components\\DoctorsList\\DoctorsList.jsx":"9","E:\\Polyclinic-react-app\\src\\components\\About\\About.js":"10","E:\\Polyclinic-react-app\\src\\components\\Login\\Login.js":"11"},{"size":4134,"mtime":1615196741635,"results":"12","hashOfConfig":"13"},{"size":7933,"mtime":1615458404607,"results":"14","hashOfConfig":"13"},{"size":2765,"mtime":1615406186411,"results":"15","hashOfConfig":"13"},{"size":223,"mtime":1613326106519,"results":"16","hashOfConfig":"13"},{"size":991,"mtime":1615316681894,"results":"17","hashOfConfig":"13"},{"size":1626,"mtime":1614433661821,"results":"18","hashOfConfig":"13"},{"size":2614,"mtime":1615406810787,"results":"19","hashOfConfig":"13"},{"size":3052,"mtime":1614433661837,"results":"20","hashOfConfig":"13"},{"size":4232,"mtime":1615458242721,"results":"21","hashOfConfig":"13"},{"size":3343,"mtime":1615457530667,"results":"22","hashOfConfig":"13"},{"size":3145,"mtime":1615411966129,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1o8xx2f",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Polyclinic-react-app\\src\\models\\AppModel.js",[],"E:\\Polyclinic-react-app\\src\\components\\Schedule\\Schedule.jsx",[],"E:\\Polyclinic-react-app\\src\\components\\Note\\Note.jsx",[],["48","49"],"E:\\Polyclinic-react-app\\src\\store\\index.js",[],"E:\\Polyclinic-react-app\\src\\index.js",[],"E:\\Polyclinic-react-app\\src\\store\\actions.js",[],"E:\\Polyclinic-react-app\\src\\components\\Day\\Day.jsx",["50"],"import React, {memo} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {removeDay as removeDayServer} from '../../models/AppModel';\r\nimport {removeNotelistAction} from '../../store/actions';\r\nimport Note from '../Note/Note';\r\nimport Cookies from \"js-cookie\";\r\n\r\nconst Day = ({\r\n                 dayDate,\r\n                 dayChange,\r\n                 dayId,\r\n                 notes = [],\r\n                 removeNotelistDispatch,\r\n                 id\r\n             }) => {\r\n    const removeNotelist = async (id) => {\r\n        try {\r\n            for (let i = 0; i < notes.length; i++) {\r\n                if (notes[i].noteName) {\r\n                    alert(\"На день назначены приемы. Невозможно удалить.\");\r\n                    return;\r\n                }\r\n            }\r\n\r\n            // eslint-disable-next-line no-restricted-globals\r\n            if (confirm(`День '${dayDate}' будет удален. Продолжить?`)) {\r\n                const info = await removeDayServer(dayId, id);\r\n                console.log(info);\r\n                removeNotelistDispatch(dayId);\r\n            }\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"element-container\">\r\n            <div className=\"card\">\r\n                {Cookies.get('isAdmin') === 'true' &&\r\n                <span className=\"card-task-icon card-task-icon-delete card-task-icon-remove-daylist\"\r\n                      onClick={() => removeNotelist(id)}\r\n                />}\r\n\r\n                <div className=\"card-header\">\r\n                    {dayDate} | {dayChange}\r\n                </div>\r\n                <div className=\"card-patients-container\">\r\n                    {notes.map((note, index) => {\r\n                            if (Cookies.get('isAdmin') === 'true' || (Cookies.get('isAdmin') === 'false' && note.noteName===\"\")) return <Note\r\n                                noteName={note.noteName}\r\n                                noteTime={note.noteTime}\r\n                                noteId={index}\r\n                                dayId={dayId}\r\n                                id={id}\r\n                                key={`list${dayId}-note${index}`}\r\n                            />\r\n                        }\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    removeNotelistDispatch: dayId =>\r\n        dispatch(removeNotelistAction(dayId))\r\n});\r\n\r\nexport default connect(\r\n    null,\r\n    mapDispatchToProps\r\n)(memo(Day));\r\n","E:\\Polyclinic-react-app\\src\\store\\reducer.js",[],"E:\\Polyclinic-react-app\\src\\components\\DoctorsList\\DoctorsList.jsx",[],"E:\\Polyclinic-react-app\\src\\components\\About\\About.js",["51"],"E:\\Polyclinic-react-app\\src\\components\\Login\\Login.js",[],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":48,"column":46,"nodeType":"58","messageId":"59","endLine":48,"endColumn":48},{"ruleId":"60","severity":1,"message":"61","line":35,"column":21,"nodeType":"62","endLine":35,"endColumn":73},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]